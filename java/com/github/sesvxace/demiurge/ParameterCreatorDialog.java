package com.github.sesvxace.demiurge;

public class ParameterCreatorDialog extends javax.swing.JDialog {
  private boolean okClicked;
  private String type;

  public ParameterCreatorDialog(javax.swing.JDialog parent, boolean modal) {
    super(parent, modal);
    initComponents();
    okClicked = false;
    type = "";
    pack();
    setLocationRelativeTo(parent);
  }
  
  public ParameterCreatorDialog(javax.swing.JDialog parent, boolean modal,
                                                                Object[] data) {
    super(parent, modal);
    initComponents();
    okClicked = false;
    nameTextField.setText((String) data[0]);
    type = (String) data[1];
    switch (type) {
      case ":Integer":
      case ":IntegerArray":
        integerButton.setSelected(true);
        break;
      case ":Float":
      case ":FloatArray":
        floatButton.setSelected(true);
        break;
      case ":String":
      case ":StringArray":
        stringButton.setSelected(true);
        break;
      case ":Boolean":
        booleanButton.setSelected(true);
        break;
      case ":Paragraph":
        paragraphButton.setSelected(true);
        break;
    }
    restBox.setSelected((boolean) data[2]);
    descriptionTextField.setText((String) data[3]);
    choiceTextField.setText((String) data[4]);
    interpreterTextField.setText((String) data[5]);
    pack();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    typeButtons = new javax.swing.ButtonGroup();
    nameLabel = new javax.swing.JLabel();
    nameTextField = new javax.swing.JTextField();
    jLabel1 = new javax.swing.JLabel();
    integerButton = new javax.swing.JRadioButton();
    floatButton = new javax.swing.JRadioButton();
    stringButton = new javax.swing.JRadioButton();
    booleanButton = new javax.swing.JRadioButton();
    paragraphButton = new javax.swing.JRadioButton();
    jLabel2 = new javax.swing.JLabel();
    restBox = new javax.swing.JCheckBox();
    jLabel3 = new javax.swing.JLabel();
    descriptionTextField = new javax.swing.JTextField();
    jLabel4 = new javax.swing.JLabel();
    choiceTextField = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    interpreterTextField = new javax.swing.JTextField();
    jButton1 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Add Parameter");
    setMinimumSize(new java.awt.Dimension(480, 300));
    setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
    setName("parameterDialog"); // NOI18N
    setResizable(false);
    getContentPane().setLayout(new java.awt.GridBagLayout());

    nameLabel.setText("Name");
    nameLabel.setToolTipText("The name of the parameter.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(nameLabel, gridBagConstraints);

    nameTextField.setToolTipText("The name of the parameter.");
    nameTextField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        nameTextFieldActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(nameTextField, gridBagConstraints);

    jLabel1.setText("Type");
    jLabel1.setToolTipText("The kind of value the parameter expects.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jLabel1, gridBagConstraints);

    typeButtons.add(integerButton);
    integerButton.setText("Integer");
    integerButton.setToolTipText("<html>An integer value.<br>ex:<br>1<br>2<br>5<br>8000</html>");
    integerButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        integerButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(integerButton, gridBagConstraints);

    typeButtons.add(floatButton);
    floatButton.setText("Float");
    floatButton.setToolTipText("<html>A float value.<br>ex:<br>0.5<br>1.0<br>34.3<br>45.29</html>");
    floatButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        floatButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(floatButton, gridBagConstraints);

    typeButtons.add(stringButton);
    stringButton.setText("String");
    stringButton.setToolTipText("A string value -- that is to say, text of any kind.");
    stringButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        stringButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(stringButton, gridBagConstraints);

    typeButtons.add(booleanButton);
    booleanButton.setText("Boolean");
    booleanButton.setToolTipText("A boolean value -- this should only be used by tags that take a single parameter.");
    booleanButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        booleanButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(booleanButton, gridBagConstraints);

    typeButtons.add(paragraphButton);
    paragraphButton.setText("Paragraph");
    paragraphButton.setToolTipText("A long, possibly multiline, string value.");
    paragraphButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        paragraphButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(paragraphButton, gridBagConstraints);

    jLabel2.setText("Rest?");
    jLabel2.setToolTipText("Whether or not the parameter captures all of the user's remaining input.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jLabel2, gridBagConstraints);

    restBox.setToolTipText("Whether or not the parameter captures all of the user's remaining input.");
    restBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        restBoxActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(restBox, gridBagConstraints);

    jLabel3.setText("Description");
    jLabel3.setToolTipText("A description of the parameter.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jLabel3, gridBagConstraints);

    descriptionTextField.setToolTipText("A description of the parameter.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(descriptionTextField, gridBagConstraints);

    jLabel4.setText("Choices");
    jLabel4.setToolTipText("<html>A piece of ruby code that will return an array of choices.<br>Leave this blank to allow the user to enter their own values.<br>ex:<br>Data_System.elements<br>['Choice 1', 'Choice 2', Choice 3']</html>");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jLabel4, gridBagConstraints);

    choiceTextField.setToolTipText("<html>A piece of ruby code that will return an array of choices.<br>Leave this blank to allow the user to enter their own values.<br>ex:<br>Data_System.elements<br>['Choice 1', 'Choice 2', Choice 3']</html>");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(choiceTextField, gridBagConstraints);

    jLabel5.setText("Interpreter");
    jLabel5.setToolTipText("<html>A piece of ruby code that will translate a selection from Choices into something usable by the tag.<br>Leave this blank if you left Choices blank or if whatever the user selects from Choices is fine on its own.<br>Assume $v to contain the string that the user chose.<br>ex:<br>Data_System.elements.index($v)</html>");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jLabel5, gridBagConstraints);

    interpreterTextField.setToolTipText("<html>A piece of ruby code that will translate a selection from Choices into something usable by the tag.<br>Leave this blank if you left Choices blank or if whatever the user selects from Choices is fine on its own.<br>Assume $v to contain the string that the user chose.<br>ex:<br>Data_System.elements.index($v)</html>");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(interpreterTextField, gridBagConstraints);

    jButton1.setText("Done");
    jButton1.setToolTipText("Finish and add the parameter to the tag.");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jButton1, gridBagConstraints);
    jButton1.getAccessibleContext().setAccessibleName("okButton");

    pack();
  }// </editor-fold>//GEN-END:initComponents

  public boolean getOKClicked() {
    return okClicked;
  }
  
  public Object[] getParameter() {
    Object[] r =  { nameTextField.getText(), type, restBox.isSelected(),
                      descriptionTextField.getText(), choiceTextField.getText(),
                                               interpreterTextField.getText() };
    return r;
  }
  
  private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
    okClicked = true;
    dispose();
  }//GEN-LAST:event_nameTextFieldActionPerformed

  private void integerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_integerButtonActionPerformed
    if (integerButton.isSelected()) {
      if (restBox.isSelected()) type = ":IntegerArray";
      else type = ":Integer";
    }
  }//GEN-LAST:event_integerButtonActionPerformed

  private void floatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_floatButtonActionPerformed
    if (floatButton.isSelected()) {
      if (restBox.isSelected()) type = ":FloatArray";
      else type = ":Float";
    }
  }//GEN-LAST:event_floatButtonActionPerformed

  private void stringButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stringButtonActionPerformed
    if (stringButton.isSelected()) {
      if (restBox.isSelected()) type = ":StringArray";
      else type = ":String";
    }
  }//GEN-LAST:event_stringButtonActionPerformed

  private void booleanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booleanButtonActionPerformed
    if (booleanButton.isSelected()) type = ":Boolean";
  }//GEN-LAST:event_booleanButtonActionPerformed

  private void paragraphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paragraphButtonActionPerformed
    if (paragraphButton.isSelected()) type = ":Paragraph";
  }//GEN-LAST:event_paragraphButtonActionPerformed

  private void restBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restBoxActionPerformed
    if (restBox.isSelected()) {
      booleanButton.setEnabled(false);
      booleanButton.setSelected(false);
      paragraphButton.setEnabled(false);
      paragraphButton.setSelected(false);
      if (type.equals(":Boolean") || type.equals(":Paragraph")) {
        type = "";
      } else type = type + "Array";
    } else {
      booleanButton.setEnabled(true);
      paragraphButton.setEnabled(true);
      type = type.substring(0, type.indexOf("Array"));
    }
  }//GEN-LAST:event_restBoxActionPerformed

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    okClicked = true;
    dispose();
  }//GEN-LAST:event_jButton1ActionPerformed
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JRadioButton booleanButton;
  private javax.swing.JTextField choiceTextField;
  private javax.swing.JTextField descriptionTextField;
  private javax.swing.JRadioButton floatButton;
  private javax.swing.JRadioButton integerButton;
  private javax.swing.JTextField interpreterTextField;
  private javax.swing.JButton jButton1;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel nameLabel;
  private javax.swing.JTextField nameTextField;
  private javax.swing.JRadioButton paragraphButton;
  private javax.swing.JCheckBox restBox;
  private javax.swing.JRadioButton stringButton;
  private javax.swing.ButtonGroup typeButtons;
  // End of variables declaration//GEN-END:variables
}
