package com.github.sesvxace.demiurge;

import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.KeyStroke;

public class PluginCreatorDialog extends javax.swing.JDialog {
  private boolean okClicked;
  private final HashMap tags;
  private final ListDeleteAction deleteItem = new ListDeleteAction();
  private String type;

  public PluginCreatorDialog(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
    tags = new HashMap();
    okClicked = false;
    tagList.setModel(new DefaultListModel());
    DefaultListModel model = (DefaultListModel) (tagList.getModel());
    for (int i = 0; i < 5; i++)
      model.add(model.getSize(), " ");
    pack();
    setLocationRelativeTo(parent);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    typeButtons = new javax.swing.ButtonGroup();
    nameLabel = new javax.swing.JLabel();
    authorTextField = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    scriptTextField = new javax.swing.JTextField();
    jLabel4 = new javax.swing.JLabel();
    urlTextField = new javax.swing.JTextField();
    jLabel2 = new javax.swing.JLabel();
    jScrollPane2 = new javax.swing.JScrollPane();
    descriptionField = new javax.swing.JTextArea();
    jLabel5 = new javax.swing.JLabel();
    jButton1 = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    tagList = new javax.swing.JList();
    tagList.setCellRenderer(new ListBackground());
    tagList.getInputMap().put(KeyStroke.getKeyStroke("DELETE"), "deleteItem");
    tagList.getActionMap().put("deleteItem", deleteItem);
    DefaultListModel model = new DefaultListModel();
    for (int i = 0; i < 5; i++)
    model.add(model.getSize(), " ");

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Create Plugin");
    setMinimumSize(new java.awt.Dimension(480, 420));
    setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
    setName("parameterDialog"); // NOI18N
    setResizable(false);
    getContentPane().setLayout(new java.awt.GridBagLayout());

    nameLabel.setText("Author");
    nameLabel.setToolTipText("The name of the author of the script for which you are creating a plugin.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weighty = 0.2;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(nameLabel, gridBagConstraints);

    authorTextField.setToolTipText("The name of the author of the script for which you are creating a plugin.");
    authorTextField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        authorTextFieldActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.2;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(authorTextField, gridBagConstraints);

    jLabel3.setText("Script");
    jLabel3.setToolTipText("The name of the script for which you are creating a plugin.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.weighty = 0.2;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jLabel3, gridBagConstraints);

    scriptTextField.setToolTipText("The name of the script for which you are creating a plugin.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.2;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(scriptTextField, gridBagConstraints);

    jLabel4.setText("URL");
    jLabel4.setToolTipText("A link to the script for which you are creating a plugin.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.weighty = 0.2;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jLabel4, gridBagConstraints);

    urlTextField.setToolTipText("A link to the script for which you are creating a plugin.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.2;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(urlTextField, gridBagConstraints);

    jLabel2.setText("Description");
    jLabel2.setToolTipText("A description of the script for which you are writing a plugin.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jLabel2, gridBagConstraints);

    descriptionField.setColumns(20);
    descriptionField.setLineWrap(true);
    descriptionField.setRows(3);
    descriptionField.setTabSize(2);
    descriptionField.setToolTipText("A description of the script for which you are writing a plugin.");
    descriptionField.setWrapStyleWord(true);
    jScrollPane2.setViewportView(descriptionField);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.4;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jScrollPane2, gridBagConstraints);

    jLabel5.setText("Tags");
    jLabel5.setToolTipText("The plugin's tags.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.weighty = 0.2;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jLabel5, gridBagConstraints);

    jButton1.setText("Done");
    jButton1.setToolTipText("Finish and generate the plugin.");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jButton1, gridBagConstraints);

    tagList.setModel(model);
    tagList.setToolTipText("The plugin's tags.");
    tagList.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        tagListMouseClicked(evt);
      }
    });
    jScrollPane1.setViewportView(tagList);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 0.6;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(jScrollPane1, gridBagConstraints);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void authorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorTextFieldActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_authorTextFieldActionPerformed

  public boolean getOKClicked() {
    return okClicked;
  }
  
  public Object[] getPlugin() {
    Object[] r = { authorTextField.getText(), scriptTextField.getText(),
                     urlTextField.getText(), descriptionField.getText(), tags };
    return r;
  }
  
  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    okClicked = true;
    dispose();
  }//GEN-LAST:event_jButton1ActionPerformed

  private void tagListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tagListMouseClicked
    if (evt.getClickCount() >= 2) {
      TagCreatorDialog tag;
      int index = tagList.getSelectedIndex();
      if (tags.get(index) != null) {
        tag = new TagCreatorDialog(this, true, (Object[]) tags.get(index));
      } else tag = new TagCreatorDialog(this, true);
      tag.setVisible(true);
      if (tag.getOKClicked()) {
        Object[] t = tag.getTag();
        if (t[0].equals("")) return;
        DefaultListModel model = ((DefaultListModel) tagList.getModel());
        if (tagList.getSelectedValue().equals(" ")) {
          int i = model.indexOf(" ");
          tags.put(i, t);
          if (i == model.getSize() - 1) {
            model.add(i, ((Object[]) tags.get(i))[0]);
          } else {
            model.remove(i);
            model.add(i, ((Object[]) tags.get(i))[0]);
          }
        } else {
          tags.put(index, t);
          model.remove(index);
          model.add(index, ((Object[]) tags.get(index))[0]);
        }
      }
    }
  }//GEN-LAST:event_tagListMouseClicked

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField authorTextField;
  private javax.swing.JTextArea descriptionField;
  private javax.swing.JButton jButton1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JLabel nameLabel;
  private javax.swing.JTextField scriptTextField;
  private javax.swing.JList tagList;
  private javax.swing.ButtonGroup typeButtons;
  private javax.swing.JTextField urlTextField;
  // End of variables declaration//GEN-END:variables
}
